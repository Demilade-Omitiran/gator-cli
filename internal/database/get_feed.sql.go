// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: get_feed.sql

package database

import (
	"context"
	"database/sql"
	"time"

	"github.com/google/uuid"
)

const getFeed = `-- name: GetFeed :one
SELECT F.id, F.name, F.url, U.name AS user_name, F.created_at, F.updated_at
FROM feeds F
LEFT JOIN users U ON F.user_id = U.id
WHERE F.url = $1
`

type GetFeedRow struct {
	ID        uuid.UUID
	Name      string
	Url       string
	UserName  sql.NullString
	CreatedAt time.Time
	UpdatedAt time.Time
}

func (q *Queries) GetFeed(ctx context.Context, url string) (GetFeedRow, error) {
	row := q.db.QueryRowContext(ctx, getFeed, url)
	var i GetFeedRow
	err := row.Scan(
		&i.ID,
		&i.Name,
		&i.Url,
		&i.UserName,
		&i.CreatedAt,
		&i.UpdatedAt,
	)
	return i, err
}
